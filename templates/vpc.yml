---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Simple VPC template"

Parameters:
  Environment:
    Type: String
    Description: The VPC environment
    AllowedValues:
    - DEV
    - TEST
    - PREPROD
    - PROD
  Project:
    Type: String 
    Description: The Project Name

  VPCCIDR:
    Type: String
    Description: CIDR block for the VPC
    Default: 10.229.0.0/16
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
  
  SubnetAPrivateCIDR:
    Description: CIDR block for the private subnet in availability zone
    Type: String
    Default: "10.229.30.0/24"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
  
  SubnetBPrivateCIDR:
    Description: CIDR block for the private subnet in availability zone
    Type: String
    Default: "10.229.40.0/24"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
  
  SubnetAPublicCIDR:
    Description: CIDR block for the public subnet in availability zone
    Type: String
    Default: "10.229.10.0/24"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
  
  SubnetBPublicCIDR:
    Description: CIDR block for the public subnet in availability zone
    Type: String
    Default: "10.229.20.0/24"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"

  EnableVPCFlowLogs:
    Description: Create a Flow logs for the VPC
    Type: String
    Default: "true"
    AllowedValues:
    - "true"
    - "false"

Conditions:
  CreateVPCFlowLogs: !Equals [!Ref EnableVPCFlowLogs, "true"]

Resources:

  VPC: 
    Type: AWS::EC2::VPC 
    Properties: 
      CidrBlock: !Ref VPCCIDR 
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
      - Key: Name
        Value: !Sub "${Project}-${Environment}"
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  FlowLogsRole:
    Type: AWS::IAM::Role
    Condition: CreateVPCFlowLogs
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: vpc-flow-logs.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: flowlogs-policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Resource: !GetAtt VPCLogGroup.Arn
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
  
  VPCLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: CreateVPCFlowLogs
    Properties:
      RetentionInDays: 30
      LogGroupName: !Sub ${Project}-${Environment}-vpc-flow-logs

  FlowLogs:
    Type: AWS::EC2::FlowLog
    Condition: CreateVPCFlowLogs
    Properties: 
      DeliverLogsPermissionArn: !GetAtt FlowLogsRole.Arn
      LogDestination: !GetAtt VPCLogGroup.Arn
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
      Tags:
      - Key: Name
        Value: !Sub "${Project}-${Environment}-flow-logs"
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  InternetGateway:
    Type: AWS::EC2::InternetGateway 
    Properties:
      Tags:
      - Key: Name
        Value: !Sub "${Project}-${Environment}-igw"
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  InternetGatewayAttachment: 
    Type: AWS::EC2::VPCGatewayAttachment 
    Properties: 
      VpcId: !Ref VPC 
      InternetGatewayId: !Ref InternetGateway
  
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  SubnetAPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetAPublicCIDR
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-public-a"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
  
  SubnetBPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetBPublicCIDR
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-public-b"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project

  SubnetAPrivate:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetAPrivateCIDR
      AvailabilityZone: !Select
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-private-a"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project

  SubnetBPrivate:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref SubnetBPrivateCIDR
      AvailabilityZone: !Select
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-private-b"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
  
  RouteTableAPublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-public-a-rt"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
  
  RouteTableBPublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-public-b-rt"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
  
  RouteTableAPrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-private-a-rt"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
    
  RouteTableBPrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${Project}-${Environment}-private-b-rt"
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project
    
  RouteTableAssociationAPublic:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RouteTableAPublic
        SubnetId: !Ref SubnetAPublic
  
  RouteTableAssociationBPublic:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RouteTableBPublic
        SubnetId: !Ref SubnetBPublic
  
  RouteTableAssociationAPrivate:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RouteTableAPrivate
        SubnetId: !Ref SubnetAPrivate
  
  RouteTableAssociationBPrivate:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RouteTableBPrivate
        SubnetId: !Ref SubnetBPrivate
  
  RouteTablePublicAInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableAPublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  RouteTablePublicBInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableBPublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  
  NetworkAclPublic:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${Project}-${Environment}-public-nacl"
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project
  
  NetworkAclPrivate:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${Project}-${Environment}-private-nacl"
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project
  
  SubnetNetworkAclAssociationAPublic:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SubnetAPublic
      NetworkAclId: !Ref NetworkAclPublic
  
  SubnetNetworkAclAssociationBPublic:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SubnetBPublic
      NetworkAclId: !Ref NetworkAclPublic
  
  SubnetNetworkAclAssociationAPrivate:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SubnetAPrivate
      NetworkAclId: !Ref NetworkAclPrivate
  
  SubnetNetworkAclAssociationBPrivate:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref SubnetBPrivate
      NetworkAclId: !Ref NetworkAclPrivate

  NetworkAclEntryInPublicAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0

  NetworkAclEntryOutPublicAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0
  
  NetworkAclEntryInPrivateAllowVPC:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: 0.0.0.0/0
  
  NetworkAclEntryOutPrivateAllowVPC:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: 0.0.0.0/0

  NATGatewayA:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayAEIP.AllocationId
      SubnetId: !Ref SubnetAPublic
      Tags:
      - Key: Name
        Value: !Sub "${Project}-${Environment}-a-nat-gw"
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  NATGatewayAEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: "vpc"
  
  NATGatewayARoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableAPrivate
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NATGatewayA

  NATGatewayB:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayBEIP.AllocationId
      SubnetId: !Ref SubnetBPublic
      Tags:
      - Key: Name
        Value: !Sub "${Project}-${Environment}-b-nat-gw"
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project
  
  NATGatewayBEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: "vpc"
  
  NATGatewayBRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTableBPrivate
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NATGatewayB

  
  DHCPOptionSet:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: service.intra
      DomainNameServers:
      - AmazonProvidedDNS
      Tags:
      - Key: Name
        Value: !Sub  ${Project}-${Environment}-dhcp
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project
  
  OptionSetAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      DhcpOptionsId: !Ref DHCPOptionSet
      VpcId: !Ref VPC
  